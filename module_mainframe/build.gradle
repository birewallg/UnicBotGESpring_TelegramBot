plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'jacoco'
}

group 'local.ts3snet'
version '0.0.1-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-tomcat:2.6.3'
    api 'org.springframework.boot:spring-boot-starter-web:2.6.3'

    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter:2.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.6.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.6.1'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.1.Final'
    implementation group: 'com.h2database', name: 'h2', version: '2.0.202'
    implementation 'org.modelmapper:modelmapper:2.4.5'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    implementation 'io.micrometer:micrometer-registry-prometheus:1.8.2'
}


test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

javadoc {
    options.encoding = 'UTF-8'
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}